program test

namespace nmpsp {
    const int b = 3, c = 5;
    int a;

    class Katrina {
        static int stat;
        static {
            stat++;
        }


        {
            void m() { stat++; }
        }
    }

    { }
}

int b;
int m[];
int vada[];

class Katrina{
    static int stat;
    static {
        stat++;
    }
    int a, b, c;
   {

   }
}

class Nizovi {
    int niz[];
}

class Oliveira extends Katrina {
    Katrina kat;
    Nizovi niz1;
    {
        void memo() { }

        int meth(int b[]) {
            Oliveira.stat++;
            return this.a;
        }

        int meth1(int a) int b[]; {
            meth(new int[66]);
            return 1;
        }
        int meth2(int a, int b) { return 2; }
    }
}

{
    void main() Katrina oli;
}
program test

class Cacan {
    int caci[];
    int cac;
}

class Macan extends Cacan {
    Cacan c[];
    int mac[];

    {
        int method() { return 3; }
    }
}


{

    int getIndex(Macan m) {
        m.cac++;
        return m.cac;
    }

    void main() Macan mac; int arr1[]; int arr2[]; int j; {

        // first error
        mac = new Macan();
        mac.c = new Cacan[10];
        mac.c[0] = new Cacan();
        mac.c[1] = new Cacan();

        // second error
        arr1 = new int[5];
        arr2 = new int[2];
        for(j = 0; j < len(arr1); j++) arr1[j] = j + 3;
        mac.mac = new int[3];
        mac.c[0].caci = new int[3];
        mac.c[1].caci = new int[3];
        mac.cac = 0;
        [mac.cac,*mac.c[getIndex(mac)].caci] = arr1;
        print(mac.cac);
        for(j = 0; j < len(mac.c[0].caci); j++) {
            print(mac.c[1].caci[j]);
        }
    }

}
program test

namespace trial {
    class Trial {
        int f;
        {
            void tr() { }
        }
    }

    {
        void f() { print('f'); }
    }
}


class Test {
    int num;
    {
        void m(int num) { this.num = num; }
        void f() {}
        int e() { print('e'); return 5; }
    }
}

int a, b, c, d;

class Mest extends Test {
    static int statss;
    Test t;
    int mmm;

    {
        void f() { print('c'); }
        void m(int num) { f(); }
    }
}

{
    void main() Mest m; Test t; int j; {
        m = new Mest();
        t = new Mest();
        m.mmm = 123;
        t.m(123);
        j = m.mmm;
    }
}
